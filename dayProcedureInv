CREATE OR REPLACE 
PROCEDURE "P_GEN_DAY_RECORD" AS V_LASTSTAT DATE;
BEGIN
	--获取上次统计时间
	V_LASTSTAT := F_GET_RECORD_LOG('STAT_DAY_RECORD');
	
	--记录统计日志
	WHMES."P_WRITE_STAT_lOG"('STAT_DAY_RECORD');

	--删除临时表
	DELETE FROM TEMP_DAY_DIMENSION;

	--存储相关新增维度数据
	INSERT INTO TEMP_DAY_DIMENSION(BIZORGCODE,DOMAINCOL,ORGCODE,ORGSIGN,ASTUOMCODE,BIZCATEGORY,BIZDATE,BIZTYPE,MATERIELCODE,PARTNERCODE,UOMCODE)
		
			(

				SELECT
					M .BIZORGCODE AS BIZORGCODE,
					M .DOMAINCOL AS DOMAINCOL,
					M .ORGCODE AS ORGCODE,
					M. ORGSIGN AS ORGSIGN,
					NVL(B2.packUomCode,'*') AS ASTUOMCODE,
					CASE WHEN M. DOCTYPE = 'MOVE_PROC' AND TRANSACTIONTYPE = 'IN' THEN 'TRANS_IN' 
							 WHEN M. DOCTYPE = 'MOVE_PROC' AND TRANSACTIONTYPE = 'SO' THEN 'TRANS_OUT'
							 WHEN M. DOCTYPE = 'ASN_PROC' THEN 'ASN'
							 WHEN M. DOCTYPE = 'SO_PROC' THEN 'SO'
							 WHEN M. DOCTYPE = 'ADJ_PROC' THEN 'ADJ'	
					END AS BIZCATEGORY,
					TRUNC(M.DOCDATE) AS BIZDATE,
					M .DOCCAT AS BIZTYPE,
					V .MATERIELCODE AS MATERIELCODE,
					NVL(P2.PARTNERCODE,'*') AS PARTNERCODE,
					B1.packUomCode AS UOMCODE
				FROM
					Inv_TransactionLog M
				LEFT JOIN BAS_PartnerBelongComp P1 ON M.toCustomerId = P1.partnerId
				LEFT JOIN Bas_PartnerInfo P2 ON P1.partnerId = P2.ID
				LEFT JOIN V_MATERIEL_COMP_VIEW V ON M.toMaterielId = V. ID
				LEFT JOIN Bas_UomDetailsInfo B2 ON M.toAstUomId = B2. ID
				LEFT JOIN Bas_UomDetailsInfo B1 ON M.toUomId = B1. ID
				WHERE
					V. ID IS NOT NULL AND
					M. DOCTYPE NOT IN('INNER_MOVE_PROC','FREEZE_DET','SUBMIT_DET') AND
					M. REDATEDATE > V_LASTSTAT
				GROUP BY
					M .DOMAINCOL,
					M. ORGSIGN,
					M .ORGCODE,
					M .BIZORGCODE,
					M. DOCTYPE,
					M. DOCCAT,
					V. MATERIELCODE,
					B1.packUomCode,
					B2.packUomCode,
					M.TRANSACTIONTYPE,
					P2.PARTNERCODE,
					TRUNC(M.DOCDATE)

		);
	
	--删除旧记录
	DELETE FROM 
		INV_BIZSKUDAYSTAT
	WHERE
	(
		BIZORGCODE,
		DOMAINCOL,
		ORGCODE,
		ORGSIGN,
		ASTUOMCODE,
		BIZCATEGORY,
		BIZDATE,
		BIZTYPE,
		MATERIELCODE,
		PARTNERCODE,
		UOMCODE
	)
		IN
	(
			SELECT 
				BIZORGCODE,
				DOMAINCOL,
				ORGCODE,
				ORGSIGN,
				ASTUOMCODE,
				BIZCATEGORY,
				BIZDATE,
				BIZTYPE,
				MATERIELCODE,
				PARTNERCODE,
				UOMCODE 
			FROM 
				TEMP_DAY_DIMENSION
	);
	
	--插入新的记录
	
	INSERT INTO INV_BIZSKUDAYSTAT (
		"ID",
		"BIZORGCODE",
		"CREATEDDATE",
		"CREATORCODE",
		"DATAVERSION",
		"DOMAINCOL",
		"ORGCODE",
		"ORGSIGN",
		"REDACTORCODE",
		"REDATEDATE",
		"REMARK",
		"STATUS",
		"ASTBIZAMOUNT",
		"ASTBIZEAAMOUNT",
		"ASTUOMCODE",
		"ASTUOMID",
		"ASTUOMNAME",
		"BIZAMOUNT",
		"BIZCATEGORY",
		"BIZDATE",
		"BIZEAAMOUNT",
		"BIZFACTOR",
		"BIZTYPE",
		"MATERIELCLASS",
		"MATERIELCODE",
		"MATERIELID",
		"MATERIELNAME",
		"MATERIELTYPE",
		"PARTNERCODE",
		"PARTNERID",
		"PARTNERNAME",
		"STATFLAG",
		"UOMCODE",
		"UOMID",
		"UOMNAME"
	) 
	(	
		SELECT
			GET_UUID AS ID,
			M .BIZORGCODE AS BIZORGCODE,
			SYSDATE AS CREATEDDATE,
			'FBQ' AS CREATORCODE,
			0 AS DATAVERSION,
			M .DOMAINCOL AS DOMAINCOL,
			M .ORGCODE AS ORGCODE,
			M. ORGSIGN AS ORGSIGN,
			'FBQ' AS REDACTORCODE,
			SYSDATE AS REDATEDATE,
			'定时生成' AS REMARK,
			'05' AS STATUS,
			SUM(CASE 
							 WHEN TRANSACTIONTYPE = 'SO' THEN M. toAstQtyUom * -1
							 ELSE M. toAstQtyUom
					END) AS ASTBIZAMOUNT,
			SUM(CASE 
							 WHEN TRANSACTIONTYPE = 'SO' THEN M. toAstQtyEa * -1
							 ELSE M. toAstQtyEa
					END) AS ASTBIZEAAMOUNT,
			NVL(B2.packUomCode,'*') AS ASTUOMCODE,
			M. toAstUomId AS ASTUOMID,
			B2. UOMNAME AS ASTUOMNAME,
			--交易日志为出库类型的都反号
			SUM(CASE 
							 WHEN TRANSACTIONTYPE = 'SO' THEN M. toQtyUom * -1
							 ELSE M. toQtyUom
					END) AS BIZAMOUNT,
			CASE WHEN M. DOCTYPE = 'MOVE_PROC' AND TRANSACTIONTYPE = 'IN' THEN 'TRANS_IN' 
					 WHEN M. DOCTYPE = 'MOVE_PROC' AND TRANSACTIONTYPE = 'SO' THEN 'TRANS_OUT'
					 WHEN M. DOCTYPE = 'ASN_PROC' THEN 'ASN'
					 WHEN M. DOCTYPE = 'SO_PROC' THEN 'SO'
					 WHEN M. DOCTYPE = 'ADJ_PROC' THEN 'ADJ'	
			END AS BIZCATEGORY,
			TRUNC(M.DOCDATE) AS BIZDATE,
			SUM(CASE 
							 WHEN TRANSACTIONTYPE = 'SO' THEN M. toQtyEa * -1
							 ELSE M. toQtyEa
					END) AS BIZEAAMOUNT,
			CASE 
					 WHEN TRANSACTIONTYPE = 'SO' THEN -1 ELSE 1
			END as BIZFACTOR,
			M .DOCCAT AS BIZTYPE,
			V. MATERIELCLASS AS MATERIELCLASS,
			V .MATERIELCODE AS MATERIELCODE,
			M. toMaterielId AS MATERIELID,
			V. MATERIELNAME AS MATERIELNAME,
			V. MATERIELTYPE AS MATERIELTYPE,
			NVL(P2.PARTNERCODE,'*') AS PARTNERCODE,
			NVL(M.TOCUSTOMERID,'*') AS PARTNERID,
			NVL(P2.cnName,'*') AS PARTNERNAME,
			0 AS STATFLAG,	
			B1.packUomCode AS UOMCODE,
			M. toUomId AS UOMID,
			B1. UOMNAME AS UOMNAME
		FROM
			Inv_TransactionLog M
		LEFT JOIN BAS_PartnerBelongComp P1 ON M.toCustomerId = P1.partnerId
		LEFT JOIN Bas_PartnerInfo P2 ON P1.partnerId = P2.ID
		LEFT JOIN V_MATERIEL_COMP_VIEW V ON M.toMaterielId = V. ID
		LEFT JOIN Bas_UomDetailsInfo B2 ON M.toAstUomId = B2. ID
		LEFT JOIN Bas_UomDetailsInfo B1 ON M.toUomId = B1. ID
		WHERE
			V. ID IS NOT NULL AND
			M. DOCTYPE NOT IN('INNER_MOVE_PROC','FREEZE_DET','SUBMIT_DET') AND 
			(M .BIZORGCODE, M .DOMAINCOL, M .ORGCODE, M. ORGSIGN, NVL(B2.packUomCode,'*'), 
			CASE WHEN M. DOCTYPE = 'MOVE_PROC' AND TRANSACTIONTYPE = 'IN' THEN 'TRANS_IN' 
					 WHEN M. DOCTYPE = 'MOVE_PROC' AND TRANSACTIONTYPE = 'SO' THEN 'TRANS_OUT'
					 WHEN M. DOCTYPE = 'ASN_PROC' THEN 'ASN'
					 WHEN M. DOCTYPE = 'SO_PROC' THEN 'SO'
					 WHEN M. DOCTYPE = 'ADJ_PROC' THEN 'ADJ'	
			END, TRUNC(M.DOCDATE), M .DOCCAT, V .MATERIELCODE, NVL(P2.PARTNERCODE,'*'), B1.packUomCode)
			IN (
				 SELECT BIZORGCODE,
								DOMAINCOL,
								ORGCODE,
								ORGSIGN,
								ASTUOMCODE,
								BIZCATEGORY,
								BIZDATE,
								BIZTYPE,
								MATERIELCODE,
								PARTNERCODE,
								UOMCODE  
					FROM TEMP_DAY_DIMENSION
			)
		GROUP BY
			M .DOMAINCOL,
			M. ORGSIGN,
			M .ORGCODE,
			M .BIZORGCODE,
			M. DOCTYPE,
			M. DOCCAT,
			V. MATERIELCODE,
			B1.packUomCode,
			B2.packUomCode,
			M.TRANSACTIONTYPE,
			M.toCustomerId,
			P2.PARTNERCODE,
			P2.cnName,
			M. toMaterielId,
			V. MATERIELNAME,
			V. MATERIELCLASS,
			V. MATERIELTYPE,
			M. toUomId,
			B1. UOMNAME,
			M. toAstUomId,
			B2. UOMNAME,
			TRUNC(M.DOCDATE) 
	);

END;
